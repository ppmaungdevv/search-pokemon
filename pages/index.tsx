import { GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import graphQLClient from '../GraphQL/graphQLClient'
import { getPokeCardQuery } from '../GraphQL/queries'
import { SearchBar } from '@/components/SearchBar'
import { Result } from '@/components/Result'
import React from 'react'
import { PokeCardType } from '@/types/pokecardtype'

type HomeProp = {
  data: PokeCardType[]
}

export const getStaticProps: GetStaticProps<{data: PokeCardType[]}> = async() => {

  const query = getPokeCardQuery()
  const {cards} = await graphQLClient.request(query)

  return {
    props: {
      data: cards
    }
  }
}

const Home: NextPage<HomeProp> = ({data}) => {

  const [keyword, setKeyword] = React.useState('')
  const [dataList, setDataList] = React.useState<PokeCardType[]>(data)

  const searchWithBtn = async (event: React.MouseEvent<HTMLButtonElement>, value: string) => {
    const query = getPokeCardQuery(value)
    const {cards} = await graphQLClient.request(query)
    setDataList([...cards])
  }

  const searchWithEvolution = async (evolution: string) => {
    setKeyword(evolution)

    const query = await getPokeCardQuery(evolution)
    const {cards} = await graphQLClient.request(query)
    setDataList([...cards])

  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link href='http://fonts.googleapis.com/css?family=Ubuntu&subset=cyrillic,latin' rel='stylesheet' type='text/css' />
      </Head>
      <SearchBar
        value={keyword}
        handleChange={(event) => setKeyword(event.target.value)}
        handleSearch={((event) => searchWithBtn(event, keyword))} />
      <Result
        dataList={dataList}
        onClickEvolution={(evolution) => searchWithEvolution(evolution)} />
    </>
  )
}

export default Home